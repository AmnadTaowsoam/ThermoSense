x-default-restart: &default-restart
  restart: unless-stopped

services:
  postgres:
    image: postgres:17
    container_name: postgres
    <<: *default-restart
    ports:
      - "${DB_EXTERNAL_PORT}:5432"
    env_file: 
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - default
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d:ro  # optional: ถ้ามีสคริปต์สร้าง schema เริ่มต้น
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    <<: *default-restart
    ports:
      - "6379:6379"
    networks:
      - default
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    <<: *default-restart
    ports:
      - "5672:5672"
      - "${RABBITMQ_MGMT_PORT:-15672}:15672"
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
      # Load definitions (topology) on startup
      # RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS:
      #   -rabbitmq_management load_definitions /etc/rabbitmq/definitions.json
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - default
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 15s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: minio
    <<: *default-restart
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/ready || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s

  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_log:/mosquitto/log
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "mosquitto_pub -h localhost -t __health__ -m ping -u admin -P admin1234 || exit 1"]
      interval: 20s
      timeout: 5s
      retries: 3
      start_period: 5s
  
  auth_service:
    build:
      context: ./service/auth-service    # <- เปลี่ยนให้ตรงกับโฟลเดอร์จริง
      dockerfile: Dockerfile
    <<: *default-restart
    ports:
      - "${AUTH_SERVICE_PORT}:5100"
    env_file:
      - .env
    depends_on:
      - postgres
    environment:
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}"
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5100/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 5s

  watcher_service:
    build:
      context: ./service/watcher-service
      dockerfile: Dockerfile
    <<: *default-restart
    ports:
      - "${WATCHER_SERVICE_PORT}:5105"
    env_file:
      - .env
    depends_on:
      - postgres
    environment:
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:${DB_PORT}/${DB_NAME}"
      DB_SCHEMA: thermo
      NODE_ENV: production
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "curl -v http://localhost:5105/health || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s


networks:
  default:
    name: thermosense_default 
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  minio_data:
  mosquitto_data:
  mosquitto_log:
